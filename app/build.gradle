apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compile_sdk_version

    defaultConfig {
        applicationId "com.kodyuzz.kanas"
        minSdkVersion rootProject.ext.min_sdk_version
        targetSdkVersion rootProject.ext.target_sdk_version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // if references exceeded 65536 methods, we encounter an error.
        // In order to solve this issue we need to enable multiDex
        multiDexEnabled true
    }

    buildTypes {
        debug{
            //value should be included within double colons
            buildConfigField("String", "BASE_URL", "\"https://api.projects.bootcamp.mindorks.com/batch/green/\"")

            buildConfigField("String", "API_KEY", "\"HBNA19QVVAPP\"")

        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", "\"https://api.projects.bootcamp.mindorks.com/batch/green/\"")
            buildConfigField("String", "API_KEY", "\"HBNA19QVVAPP\"")
        }
    }

    compileOptions{
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions{
        jvmTarget=JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation 'androidx.core:core-ktx:1.3.0'

    //can't use
    implementation "androidx.appcompat:appcompat:$app_compat_version"

    implementation "androidx.constraintlayout:constraintlayout:$constraint_version"

    implementation "com.google.android.material:material:$support_library_version"

    implementation "androidx.recyclerview:recyclerview:$support_library_version"

    implementation "androidx.cardview:cardview:$support_library_version"

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    implementation "androidx.multidex:multidex:$multidex_version"

    implementation "com.google.dagger:dagger:$dagger_version"

    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"

    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"


    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"

    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0"

    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"

    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"

    implementation "com.jakewharton.timber:timber:$timber_version"

    implementation "com.google.code.gson:gson:$gson_version"

    implementation "com.mindorks:paracamera:0.2.2"

    testImplementation "junit:junit:$junit_version"

//    androidTestImplementation 'androidx.test.ext:junit:1.1.1'

    testImplementation "org.mockito:mockito-core:$mockito_version"

    kaptTest "com.google.dagger:dagger-compiler:$dagger_version"

    testImplementation "android.arch.core:core-testing:$core_testing_version"

    testImplementation "org.hamcrest:hamcrest-library:$hamcrest_version"

    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    //scrollToPosition method
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"

    androidTestImplementation "org.mockito:mockito-core:$mockito_version"
    //fixed keyword debugImplementation for only this lib
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"

    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"
}